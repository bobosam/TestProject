// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EndpointsTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PutMethodFeature")]
    public partial class PutMethodFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PutMethodFeature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PutMethodFeature", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change a book")]
        [NUnit.Framework.CategoryAttribute("validData")]
        [NUnit.Framework.TestCaseAttribute("Book4ChangeTitle", null)]
        [NUnit.Framework.TestCaseAttribute("Book4ChangeDescription", null)]
        [NUnit.Framework.TestCaseAttribute("Book4ChangeAuthor", null)]
        [NUnit.Framework.TestCaseAttribute("Book4ChangeTitle100Chars", null)]
        [NUnit.Framework.TestCaseAttribute("Book4ChangeAuthor30Chars", null)]
        [NUnit.Framework.TestCaseAttribute("Book4ChangeWithoutDescription", null)]
        public virtual void ChangeABook(string book, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "validData"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change a book", @__tags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.When("Add book Book4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
 testRunner.When(string.Format("Change Book4 with {0}", book), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
 testRunner.Then(string.Format("Book {0} must be save", book), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change a book with invalid id")]
        [NUnit.Framework.CategoryAttribute("invalidData")]
        [NUnit.Framework.TestCaseAttribute("negativeId", null)]
        [NUnit.Framework.TestCaseAttribute("Book0", null)]
        [NUnit.Framework.TestCaseAttribute("floatId", null)]
        [NUnit.Framework.TestCaseAttribute("tooBigId", null)]
        [NUnit.Framework.TestCaseAttribute("withoutId", null)]
        public virtual void ChangeABookWithInvalidId(string book, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "invalidData"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change a book with invalid id", @__tags);
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.When("Add book Book4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.When(string.Format("Change Book4 with {0}", book), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("Must show Id error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change a book without author")]
        [NUnit.Framework.CategoryAttribute("invalidData")]
        public virtual void ChangeABookWithoutAuthor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change a book without author", new string[] {
                        "invalidData"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.When("Add book Book4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.When("Change Book4 with Book4ChangeWithoutAuthor", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("Must show required author error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change a book longer author")]
        [NUnit.Framework.CategoryAttribute("invalidData")]
        public virtual void ChangeABookLongerAuthor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change a book longer author", new string[] {
                        "invalidData"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.When("Add book Book4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.When("Change Book4 with Book4ChangeAuthor31Chars", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("Must show longer author error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change a book without title")]
        [NUnit.Framework.CategoryAttribute("invalidData")]
        public virtual void ChangeABookWithoutTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change a book without title", new string[] {
                        "invalidData"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.When("Add book Book4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.When("Change Book4 with Book4ChangeWithoutTitle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("Must show required title error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Change a book longer title")]
        [NUnit.Framework.CategoryAttribute("invalidData")]
        public virtual void ChangeABookLongerTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Change a book longer title", new string[] {
                        "invalidData"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 50
 testRunner.When("Add book Book4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.When("Change Book4 with Book4ChangeTitle101Chars", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.Then("Must show longer title error", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
